environment:
  global:
    PROJECT_NAME: human_readable
  matrix:
#    # Stable channel
#    - TARGET: i686-pc-windows-gnu
#      CHANNEL: stable
#    - TARGET: i686-pc-windows-msvc
#      CHANNEL: stable
#    - TARGET: x86_64-pc-windows-msvc
#      CHANNEL: stable
#    # Beta channel
#    - TARGET: i686-pc-windows-gnu
#      CHANNEL: beta
#    - TARGET: i686-pc-windows-msvc
#      CHANNEL: beta
#    - TARGET: x86_64-pc-windows-gnu
#      CHANNEL: beta
#    - TARGET: x86_64-pc-windows-msvc
#      CHANNEL: beta
    # Nightly channel
    - TARGET: i686-pc-windows-gnu
      CHANNEL: nightly
    - TARGET: i686-pc-windows-msvc
      CHANNEL: nightly
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: nightly
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: nightly

      
# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs
  - rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
# source: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml#L113
build: false

# Equivalent to Travis' `script` phase
# TODO modify this phase as you see fit
test_script:
  - cargo fmt -- --write-mode=diff
  - cargo test --verbose
  - cargo build --release --verbose --all

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/32d2a5e895aa632a5754
    method: GET
    
cache:
  - target
  - C:\Users\appveyor\.cargo\registry